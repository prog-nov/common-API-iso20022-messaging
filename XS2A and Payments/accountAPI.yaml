openapi: 3.0.0
info:
  version: 1.1.5
  title: Common Account API
  description: 
    This specification defines a simple API to access information about bank accounts. The API is supposed to be used by customers who want to get information about their accounts such as current balance or transactions.
    This specification uses schema definitions from the Common Data Model v1.2.1.
  termsOfService: 'tbd'
  contact:
    email: info@common-api.ch
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: account.common-api.ch
externalDocs:
  description: Find out more about SFTI API specifications
  url: 'https://www.common-api.ch'
security:
  - OAuth2:
      - read
      - write
paths:
  /accounts:
    get:
      tags: 
        - Account List 
      description: Return the list of all accounts accessible for the logged in user.
      parameters:
        - $ref: '#/components/parameters/clientid_in_header' 
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Paginated list of all accounts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountItem'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /accounts/{accountId}:
    get:
      tags: 
        - Account Details 
      description: Return the accounts details of the requested account.
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
          description: The account the details are requested.
        - $ref: '#/components/parameters/clientid_in_header' 
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Account details of the requested account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountItem'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /accounts/{accountId}/balance:
    get:
      tags: 
        - Account data of the specified account
      description: Account data of the specified account.
      parameters:
        - in: path
          name: accountId
          description: The account the details are requested.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/clientid_in_header' 
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Account details of the requested account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountBalanceItem'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /accounts/{accountId}/transactions:
    get:
      tags: 
        - Transactions to and from the specified account
      description: Transactions to and from the specified account.
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
          description: The account the details are requested.
        - in: query
          name: dateFrom
          schema:
            $ref: '#/components/schemas/Date'
        - in: query
          name: dateTo
          schema:
            $ref: '#/components/schemas/Date'       
        - in: query
          name: bookingStatus
          required: true
          schema:
            type: string
            enum:
              - booked
              - pending
              - both
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/clientid_in_header' 
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Account details of the requested account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountTransactionReport'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /accounts/{accountId}/transactions/{transactionId}:
    get:
      tags: 
        - Details of the specified transaction.
      description: details of the specified transaction
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
          description: The account the details are requested.
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/clientid_in_header' 
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Account details of the requested account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountTransactionEntry'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
# -------------------------
# -------- Models ---------
# -------------------------
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
  schemas:
    # ---- Common Data Model v1.2.1
    # ---- Date Formats
    Date:
      type: string
      format: date
      example: 2018-04-13
      
    DateTime:
      type: string
      format: date-time
      example: 2018-04-13T11:11:11Z
    # --------
    # ---- Error Response (compliant to SIX b.Link)
    commonErrorResponse:
      title: Common Error Response
      type: object
      properties:
        type:
          $ref: '#/components/schemas/commonErrorType'
        title:
          type: string
          example:
            This is the general problem description
        detail:
          type: string
          example:
            Detailed problem description with respect to the current request
        instance:
          type: string
          example:
            path/to/corresponding/resource

    commonErrorType:
      title: Common Error Type
      description: Error Types for commonErrorResponse.
      type: string
      enum:
        - /problems/INVALID_PAYLOAD
        - /problems/MALFORMED_PAYLOAD
        - /problems/INVALID_TOKEN
        - /problems/EXPIRED_TOKEN
        - /problems/INSUFFICIENT_PRIVILEGES
        - /problems/NO_ACCESS_TO_RESOURCE
        - /problems/RESOURCE_DOES_NOT_EXIST
        - /problems/RESOURCE_NOT_READY
        - /problems/RESOURCE_TOO_LARGE
        - /problems/WRONG_METHOD
        - /problems/OPERATION_NOT_ALLOWED
        - /problems/TECHNICAL_ERROR
        - /problems/NOT_IMPLEMENTED
        - /problems/SERVICE_UNAVAILABLE
      example: '/problems/TECHNICAL_ERROR'
    # ---- End Error Response
    # ---- End Common Data Model

    # ---- Links for Pagination----
    linksPagination:
      description: Links (or cursors) returned in the answer of an API call.
      type: object
      properties:
        self:
          type: string
          description: Link / cursor to the current result set (based on the submitted pagination approach)
          example: /payment-app/api/v1/accounts/accountIDXY/transactions?offset=75&limit=25
        first:
          type: string
          description: Link / cursor to the first result set (based on the submitted pagination approach)
          example: /payment-app/api/v1/accounts/accountIDXY/transactions?offset=0&limit=25
        previous:
          type: string
          description: Link / cursor to the previous result set (based on the submitted pagination approach)
          example: /payment-app/api/v1/accounts/accountIDXY/transactions?offset=50&limit=25          
        next:
          type: string
          description: Link / cursor to the next result set (based on the submitted pagination approach)
          example: /payment-app/api/v1/accounts/accountIDXY/transactions?offset=100&limit=25          
        last:
          type: string 
          description: Link / cursor to the last result set (based on the submitted pagination approach)
          example: /payment-app/api/v1/accounts/accountIDXY/transactions?offset=150&limit=25          
    # ---------

    accountItem:
      title: Account Information Item
      type: object
      required:
        - id
        - account
        - currency
      properties:
        id:
          $ref: '#/components/schemas/commonAccountId'
        account:
          $ref: '#/components/schemas/paymentIbanAccount'
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: "CHF"
        designation:
          type: string
          maxLength: 140
          example: "Firmenkonto"
        _links:
          type: object
          description: Contains the paths to additional resources for specific account (e.g. path to transactions resource).
          properties:
            self:
              type: string
              example: '/accounts/550e8400-e29b-11d4-a716-446655440000'
            balance:
              type: string
              example: '/accounts/550e8400-e29b-11d4-a716-446655440000/balance'
            transactions:
              type: string
              example: '/accounts/550e8400-e29b-11d4-a716-446655440000/transactions'

    commonAccountId:
      type: string
      pattern: "[A-Za-z0-9](([A-Za-z0-9._]|-){0,254}[A-Za-z0-9]){0,1}"
      maxLength: 256
      example: "abc123_abcxyz.123789.abcxyz.abcxyz_abcxyz_abcxyz_abcxyz_ccccc_123abc"

    paymentIbanAccount:
      title: Payment IBAN Account
      type: object
      required:
        - type
        - identification
      properties:
        type:
          type: string
          description: The allowed account identification type for the creditor account depends on the payment type. The debtor account must always be an IBAN.
          enum:
            - "IBAN"
        identification:
          type: string
          maxLength: 34
          example: "CH9300762011623852957"
          pattern: "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"

    accountBalanceItem:
      title: Account Balance Item
      type: object
      required:
        - date
        - balanceType
        - balance
      properties:
        date:
          type: string
          format: 'date'
          example: '2010-02-15'
        balanceType:
          type: string
          enum:
            - "ITBD"
            - "CLBD"
          example: "CLBD"
        balance:
          $ref: '#/components/schemas/balanceCurrencyAmount'
        _links:
          type: object
          description: Contains the paths to additional resources for specific account (e.g. path to transactions resource).
          properties:
            self:
              type: string
              example: '/accounts/550e8400-e29b-11d4-a716-446655440000/balance'
            account:
              type: string
              example: '/accounts/550e8400-e29b-11d4-a716-446655440000'
            transactions:
              type: string
              example: '/accounts/550e8400-e29b-11d4-a716-446655440000/transactions'

    balanceCurrencyAmount:
      title: Balance Currency-Amount
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: "CHF"
        amount:
          type: string
          pattern: "-?[0-9]{1,12}([.][0-9]{1,5})?"
          maxLength: 18
          example: "10.25"

    accountTransactionReport:
      title: Account Transaction Report
      type: object
      required:
        - iban
        - entries
      properties:
        iban:
          type: string
          maxLength: 34
          example: "CH5481230000001998736"
        designation:
          type: string
          maxLength: 140
          example: "Checking Account"
        entries:
          type: array
          items:
            $ref: '#/components/schemas/accountTransactionEntry'
        linksPagination:
          $ref: '#/components/schemas/linksPagination'
        _links:
          type: object
          properties:
            self:
              type: string
              example: "/accounts/550e8400e29b11d4a716446655440000/statements"
            account:
              type: string
              example: "/accounts/550e8400e29b11d4a716446655440000"
            balance:
              type: string
              example: "/accounts/550e8400e29b11d4a716446655440000/balance"

    accountTransactionEntry:
      title: Account Transaction Entry
      type: object
      required:
        - entryId
        - transactionType
        - bookingDate
        - valueDate
        - amount
        - bankTransactionCode
      properties:
        entryId:
          type: string
          example: "ENTRY123456789"
        transactionType:
          $ref: '#/components/schemas/accountTransactionTransactionType'
        entryReference:
          type: string
          example: 010001628
          maxLength: 35
        entryReferenceInternalId:
          type: string
          maxLength: 35
          example: "010001628"
        reversalIndicator:
          type: boolean
        bookingDate:
          type: string
          format: date
          example: "2018-10-29"
        valueDate:
          type: string
          format: date
          example: "2018-10-29"
        amount:
          $ref: '#/components/schemas/paymentCurrencyAmount'
        instructedAmount:
          $ref: '#/components/schemas/accountTransactionInstructedAmount'
        totalChargesAmount:
          $ref: '#/components/schemas/accountTransactionItemCharges'
        bankTransactionCode:
          $ref: '#/components/schemas/accountTransactionBankTransactionCode'
        additionalEntryInformation:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/accountTransactionItem'

    accountTransactionTransactionType:
      title: Account Transaction Transaction Type
      type: string
      enum:
        - CRDT
        - DBIT
      example: "CRDT"

    paymentCurrencyAmount:
      title: Payment Currency-Amount
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          type: string
          maxLength: 3
          minLength: 3
          example: "CHF"
        amount:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,5})?"
          maxLength: 18
          example: "10.25"

    accountTransactionInstructedAmount:
      title: Account Transaction Instructed Amount
      type: object
      required:
        - amount
        - sourceCurrency
        - targetCurrency
      properties:
        amount:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,5})?"
          maxLength: 18
          example: "10.25"
        sourceCurrency:
          type: string
          minLength: 3
          maxLength: 3
          example: "CHF"
        targetCurrency:
          type: string
          minLength: 3
          maxLength: 3
          example: "USD"
        exchangeRate:
          type: string
          example: "0.957"
          pattern: "[0-9][.][0-9]{1,10}"
          maxLength: 12
        exchangeIndicator:
          type: string
          maxLength: 4
          example: "MULT"

    accountTransactionItemCharges:
      title: Account Transaction Item Charges
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,5})?"
          maxLength: 18
          example: "10.25"
        currency:
          type: string
          maxLength: 3
          minLength: 3
          example: "CHF"
        chargeRecords:
          type: array
          items:
            $ref: '#/components/schemas/accountTransactionItemChargesRecord'

    accountTransactionBankTransactionCode:
      title: Account Transaction Bank Transaction Code
      type: object
      required:
        - domainCode
        - familyCode
        - subFamilyCode
      properties:
        domainCode:
          type: string
          maxLength: 4
          example: "PMNT"
        familyCode:
          type: string
          maxLength: 4
          example: "RCDT"
        subFamilyCode:
          type: string
          maxLength: 4
          example: "DMCT"

    accountTransactionItem:
      title: Account Transaction Item
      type: object
      required:
        - transactionId
        - transactionType
        - amount
      properties:
        transactionId:
          type: string
          maxLength: 35
          example: 'TX12345A987'
        transactionType:
          $ref: '#/components/schemas/accountTransactionTransactionType'
        endToEndId:
          type: string
          maxLength: 35
          example: "ENDTOENDID-01"
        bankTransactionCode:
          $ref: '#/components/schemas/accountTransactionBankTransactionCode'
        amount:
          $ref: '#/components/schemas/paymentCurrencyAmount'
        instructedAmount:
          $ref: '#/components/schemas/accountTransactionInstructedAmount'
        totalChargesAmount:
          $ref: '#/components/schemas/accountTransactionItemCharges'
        counterparty:
          $ref: '#/components/schemas/accountTransactionCounterparty'
        remittanceInformation:
          $ref: '#/components/schemas/paymentRemittanceInformation'
        remittanceReference:
          $ref: '#/components/schemas/accountTransactionRemittanceReference'
        additionalTransactionInformation:
          type: string
          maxLength: 140

    accountTransactionItemChargesRecord:
      title: Account Transaction Item Charges Record
      type: object
      properties:
        amount:
          type: string
          pattern: "[0-9]{1,12}([.][0-9]{1,5})?"
          maxLength: 18
          example: "10.25"
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: "CHF"
        type:
          type: string
          maxLength: 35
          example: "Some type of charge"
        chargesIncludedIndicator:
          type: boolean

    accountTransactionCounterparty:
      title: Account Transaction Counterparty
      type: object
      properties:
        name:
          type: string
          maxLength: 140
          example: "Hans Muster"
        postalAddress:
          $ref: '#/components/schemas/accountTransactionStructuredOrUnstructuredAddress'
        account:
          $ref: '#/components/schemas/accountTransactionCounterpartyAccount'
        agent:
          $ref: '#/components/schemas/accountTransactionCounterpartyAgent'
    
    paymentRemittanceInformation:
      title: Payment Remittance Information
      description: Either remittanceReference or remittanceInformation must be set.
      type: string
      maxLength: 140
      example: "Rechnung Nr. 408"

    accountTransactionRemittanceReference:
      title: Account Transaction Remittance Reference
      type: object
      properties:
        type:
          type: string
          enum:
            - SCOR
            - ISR
            - QRR
        reference:
          type: string
          maxLength: 35
          example: "210000000003139471430009017"

    accountTransactionStructuredOrUnstructuredAddress:
      title: Common Structured or Unstructured Address
      type: object
      properties:
        structured:
          $ref: '#/components/schemas/accountTransactionStructuredAddress'
        unstructured:
          $ref: '#/components/schemas/accountTransactionUnstructuredAddress'

    accountTransactionCounterpartyAccount:
      title: Account Transaction Counterparty Account
      type: object
      required:
        - type
        - identification
      properties:
        type:
          type: string
          enum:
            - "IBAN"
            - "OTHER"
        identification:
          type: string
          maxLength: 35
          example: "CH9300762011623852957"

    accountTransactionCounterpartyAgent:
      title: Account Transaction Counterparty Agent
      type: object
      properties:
        bic:
          type: string
          maxLength: 11
        clearingSystemMemberIdentification:
          $ref: '#/components/schemas/commonClearingSystemMemberIdentification'

    accountTransactionStructuredAddress:
      title: Structured Postal Address for Transactions
      type: object
      required:
        - streetName
        - postCode
        - townName
      properties:
        streetName:
          type: string
          maxLength: 70
          example: "Rue de la gare"
        buildingNumber:
          type: string
          maxLength: 16
          example: "24"
        postCode:
          type: string
          maxLength: 16
          example: "2501"
        townName:
          type: string
          maxLength: 35
          example: "Biel"
        country:
          type: string
          maxLength: 2
          example: "CH"

    accountTransactionUnstructuredAddress:
      title: Unstructured Address for Transactions
      type: object
      required:
        - addressLines
      properties:
        addressLines:
          type: array
          description: max 4 lines of 70 characters
          maxLength: 4
          example: ["Robert Schneider SA", "Rue de la gare 24"]
          items:
            type: string
            maxLength: 70
        country:
          type: string
          maxLength: 2
          example: "CH"

    commonClearingSystemMemberIdentification:
      title: Common Clearing System Member Identification
      type: object
      required:
        - code
        - memberId
      properties:
        code:
          type: string
          maxLength: 5
          example: "CHBCC"
        memberId:
          type: string
          maxLength: 35
          example: "00230"

    PortfolioListLink:
      type: object
      title: Partner Link
      properties:
      
        rel:
          type: string
        
        href:
          type: string
          example: /mortgage-app/api/v1/mortgages
          description: |
                    The machine or tenant relative URI that points to the linked resource
        
                    Example: 
                    Assuming that the actual URL of the resource would be: https://machine/tenant/app/api/v1/detail-view/detailId,
                    then the href to the detail-view would be: /app/api/v1/detail-view/detailId
        
        version:
          type: string
          example: v1
          description: Version of the API (the same rel can appear several times for different versions that are supported)
        
        method:
          $ref: "#/components/schemas/HttpVerb"
        
        type:
          type: string
          example: "application/json"
          description: The supported http content-type when sending the request to the server. If no content is supported on an end-point (like on a typical GET) then the type will be null

    HttpVerb:
      type: string
      example: GET
      enum:
        - GET
        - POST
        - PUT
        - PATCH

  # ---- Global Common Header Parameters ----
  parameters:
    clientid_in_header:
      in: header
      name: X-CorAPI-Client-ID
      schema:
        type: string
      description: 'ID of the client forwarded to the provider. (SCOPE: FI)'
      required: true
    correlation_in_header:
      in: header
      name: X-Correlation-ID
      schema:
        type: string
      description: Unique ID (defined by the caller) which will be reflected back in the response.
      required: true
    agent_in_header:
      in: header
      name: User-Agent
      schema:
        type: string
      description: Name and version of the of the Client software.
      required: true
    offset: 
      name: offset
      in: query
      description: Optional parameter for pagination. The number of items to skip before starting to collect the result set.
      required: false
      schema:
        type: integer
        format: int32
        example: 25
        minimum: 0
    limit: 
      name: limit
      in: query
      description: Optional parameter for pagination. Maximum number of entries to be returned.
      required: false
      schema:
        type: integer
        format: int32
        example: 25
        minimum: 1
    cursor:
      name: cursor
      in: query
      description: Optional parameter for pagination. An opaque string value used for pagination.
      required: false
      schema:
        type: string
        example: cursorIDxyz

  # ---- Responses - Standard Errors Common Data Model v1.2.1----
  responses:
    standard400:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
      description: Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard401:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
      description: Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard403:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
      description: Forbidden - The server understood the request but refuses to authorize it. 
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard404:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
      description: Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard405:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
      description: Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard500:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
      description: Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard501:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
      description: Not Implemented - The server does not support the functionality required to fulfill the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'

    standard503:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
      description: Service Unavailable. The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
  # ---- End Responses - Standard Errors